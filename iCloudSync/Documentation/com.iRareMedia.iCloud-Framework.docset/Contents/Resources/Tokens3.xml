<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/iCloudDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/iCloudDelegate</TokenIdentifier>
			<Abstract type="html">The iCloudDelegate protocol defines the methods used to receive event notifications and allow for deeper control of the iCloud Class.</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>
			
			<NodeRef refid="3"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudAvailabilityDidChangeToState:withUbiquityToken:withUbiquityContainer:</TokenIdentifier>
			<Abstract type="html">Called when the availability of iCloud changes</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)iCloudAvailabilityDidChangeToState:(BOOL)cloudIsAvailable withUbiquityToken:(id)ubiquityToken withUbiquityContainer:(NSURL *)ubiquityContainer</Declaration>
			<Parameters>
				<Parameter>
					<Name>cloudIsAvailable</Name>
					<Abstract type="html">Boolean value that is YES if iCloud is available and NO if iCloud is not available</Abstract>
				</Parameter><Parameter>
					<Name>ubiquityToken</Name>
					<Abstract type="html">An iCloud ubiquity token that represents the current iCloud identity. Can be used to determine if iCloud is available and if the iCloud account has been changed (ex. if the user logged out and then logged in with a different iCloud account). This object may be nil if iCloud is not available for any reason.</Abstract>
				</Parameter><Parameter>
					<Name>ubiquityContainer</Name>
					<Abstract type="html">The root URL path to the current application&apos;s ubiquity container. This URL may be nil until the ubiquity container is initialized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/iCloudAvailabilityDidChangeToState:withUbiquityToken:withUbiquityContainer:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudDidFinishInitializingWitUbiquityToken:withUbiquityContainer:</TokenIdentifier>
			<Abstract type="html">Called when the iCloud initiaization process is finished and the iCloud is available</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)iCloudDidFinishInitializingWitUbiquityToken:(id)cloudToken withUbiquityContainer:(NSURL *)ubiquityContainer</Declaration>
			<Parameters>
				<Parameter>
					<Name>cloudToken</Name>
					<Abstract type="html">An iCloud ubiquity token that represents the current iCloud identity. Can be used to determine if iCloud is available and if the iCloud account has been changed (ex. if the user logged out and then logged in with a different iCloud account). This object may be nil if iCloud is not available for any reason.</Abstract>
				</Parameter><Parameter>
					<Name>ubiquityContainer</Name>
					<Abstract type="html">The root URL path to the current application&apos;s ubiquity container. This URL may be nil until the ubiquity container is initialized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/iCloudDidFinishInitializingWitUbiquityToken:withUbiquityContainer:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudQueryLimitedToFileExtension</TokenIdentifier>
			<Abstract type="html">Called before creating an iCloud Query filter. Specify the type of file to be queried.</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (NSString *)iCloudQueryLimitedToFileExtension</Declaration>
			
			<ReturnValue><Abstract type="html">An NSString with one file extension formatted like this: @&quot;txt&quot;</Abstract></ReturnValue>
			<Anchor>//api/name/iCloudQueryLimitedToFileExtension</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudFileUpdateDidBegin</TokenIdentifier>
			<Abstract type="html">Called before an iCloud Query begins.</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)iCloudFileUpdateDidBegin</Declaration>
			
			
			<Anchor>//api/name/iCloudFileUpdateDidBegin</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudFileUpdateDidEnd</TokenIdentifier>
			<Abstract type="html">Called when an iCloud Query ends.</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)iCloudFileUpdateDidEnd</Declaration>
			
			
			<Anchor>//api/name/iCloudFileUpdateDidEnd</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudFilesDidChange:withNewFileNames:</TokenIdentifier>
			<Abstract type="html">Tells the delegate that the files in iCloud have been modified</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)iCloudFilesDidChange:(NSMutableArray *)files withNewFileNames:(NSMutableArray *)fileNames</Declaration>
			<Parameters>
				<Parameter>
					<Name>files</Name>
					<Abstract type="html">A list of the files now in the app&apos;s iCloud documents directory - each NSMetadataItem in the array contains information such as file version, url, localized name, date, etc.</Abstract>
				</Parameter><Parameter>
					<Name>fileNames</Name>
					<Abstract type="html">A list of the file names (NSString) now in the app&apos;s iCloud documents directory</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/iCloudFilesDidChange:withNewFileNames:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudFileConflictBetweenCloudFile:andLocalFile:</TokenIdentifier>
			<Abstract type="html">Sent to the delegate where there is a conflict between a local file and an iCloud file during an upload or download</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)iCloudFileConflictBetweenCloudFile:(NSDictionary *)cloudFile andLocalFile:(NSDictionary *)localFile</Declaration>
			<Parameters>
				<Parameter>
					<Name>cloudFile</Name>
					<Abstract type="html">An NSDictionary with the cloud file and various other information. This parameter contains the fileContent as NSData, fileURL as NSURL, and modifiedDate as NSDate.</Abstract>
				</Parameter><Parameter>
					<Name>localFile</Name>
					<Abstract type="html">An NSDictionary with the local file and various other information. This parameter contains the fileContent as NSData, fileURL as NSURL, and modifiedDate as NSDate.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/iCloudFileConflictBetweenCloudFile:andLocalFile:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudFileUploadConflictWithCloudFile:andLocalFile:</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Sent to the delegate where there is a conflict between a local file and an iCloud file during an upload (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 7.0. Use iCloudFileConflictBetweenCloudFile:andLocalFile: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)iCloudFileUploadConflictWithCloudFile:(NSDictionary *)cloudFile andLocalFile:(NSDictionary *)localFile</Declaration>
			<Parameters>
				<Parameter>
					<Name>cloudFile</Name>
					<Abstract type="html">An NSDictionary with the cloud file and various other information. This parameter contains the fileContent as NSData, fileURL as NSURL, and modifiedDate as NSDate.</Abstract>
				</Parameter><Parameter>
					<Name>localFile</Name>
					<Abstract type="html">An NSDictionary with the local file and various other information. This parameter contains the fileContent as NSData, fileURL as NSURL, and modifiedDate as NSDate.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/iCloudFileUploadConflictWithCloudFile:andLocalFile:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/iCloudError:</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Called when there is an error while performing an iCloud process (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.1. Use the NSError parameter available in corresponding methods&apos; completion handlers.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)iCloudError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">An NSError with a message, error code, and information</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/iCloudError:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/cloudError:</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Tells the delegate that there was an error while performing a process (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.0. Use the NSError parameter available in corresponding methods&apos; completion handlers.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)cloudError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">Returns the NSError that occurred</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/cloudError:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/fileListChangedWithFiles:andFileNames:</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Tells the delegate that the files in iCloud have been modified (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.0. Use iCloudFilesDidChange:withNewFileNames: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)fileListChangedWithFiles:(NSMutableArray *)files andFileNames:(NSMutableArray *)fileNames</Declaration>
			<Parameters>
				<Parameter>
					<Name>files</Name>
					<Abstract type="html">Returns a list of the files now in the app&apos;s iCloud documents directory - each file in the array contains information such as file version, url, localized name, date, etc.</Abstract>
				</Parameter><Parameter>
					<Name>fileNames</Name>
					<Abstract type="html">Returns a list of the file names now in the app&apos;s iCloud documents directory</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fileListChangedWithFiles:andFileNames:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/documentWasDeleted</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Tells the delegate that a document was successfully deleted. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.0. To be removed in version 8.0. Use the completion handlers in deleteDocumentWithName:completion: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)documentWasDeleted</Declaration>
			
			
			<Anchor>//api/name/documentWasDeleted</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/documentWasSaved</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Tells the delegate that a document was successfully saved (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.0. To be removed in version 8.0. Use the completion handlers in saveDocumentWithName:withContent:completion: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)documentWasSaved</Declaration>
			
			
			<Anchor>//api/name/documentWasSaved</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/documentsFinishedUploading</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Tells the delegate that a document finished uploading (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.0. To be removed in version 8.0. Use the completion handlers in uploadLocalOfflineDocumentsWithDelegate:repeatingHandler:completion: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)documentsFinishedUploading</Declaration>
			
			
			<Anchor>//api/name/documentsFinishedUploading</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/documentsStartedUploading</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Tells the delegate that a document started uploading (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.0. To be removed in version 8.0. Delegate methods are no longer used to report method-specfic conditions and so this method is never called. Completion blocks are now used.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)documentsStartedUploading</Declaration>
			
			
			<Anchor>//api/name/documentsStartedUploading</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/documentsStartedDownloading</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Tells the delegate that a document started downloading (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.0. To be removed in version 8.0. Delegate methods are no longer used to report method-specfic conditions and so this method is never called. Completion blocks are now used.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)documentsStartedDownloading</Declaration>
			
			
			<Anchor>//api/name/documentsStartedDownloading</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/iCloudDelegate/documentsFinishedDownloading</TokenIdentifier>
			<Abstract type="html">DEPRECATED. Tells the delegate that a document finished downloading (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; Deprecated in version 6.0. To be removed in version 8.0. Delegate methods are no longer used to report method-specfic conditions and so this method is never called. Completion blocks are now used.&lt;/span&gt;)</Abstract>
			<DeclaredIn>iCloud.h</DeclaredIn>			
			
			<Declaration>- (void)documentsFinishedDownloading</Declaration>
			
			
			<Anchor>//api/name/documentsFinishedDownloading</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
	</File>
</Tokens>